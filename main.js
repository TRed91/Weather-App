(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>c});var a=t(354),o=t.n(a),r=t(314),i=t.n(r)()(o());i.push([n.id,"* {\n    box-sizing: border-box;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\nh1, h2, h3, h4, h5, h6, p {\n    padding: 0;\n    margin: 0;\n    text-align: center;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-size: cover;\n    background-repeat: no-repeat;\n    gap: 30px;\n    height: 100vh;\n}\n\n.app-body {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 30px;\n    padding: 20px;\n    background-color: #ffffffbc;\n    border-radius: 20px;\n    box-shadow: 0px 0px 10px #0000005e;\n}\n\n.location-info, .temp-info, .condition, .humidity {\n    border: 1px solid black;\n    border-radius: 10px;\n    padding: 20px;\n    width: 100%;\n    text-align: center;\n}\n\n.location-container {\n    width: 50%;\n}\n\n.location-info {\n    box-shadow: 2px 2px 3px #00000042;\n}\n\n.weather-info {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    align-items: center;\n}\n\n.weather-container {\n    display: flex;\n    gap: 10px;\n}\n\n@media only screen and (max-width: 768px) {\n    .weather-container {\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n    }\n}\n\n.temp-humid-container {\n    display: flex;\n    gap: 10px;\n}\n\n.temp-humid-container > * {\n    align-content: center;\n}\n\n.forecast-info {\n    display: flex;\n    gap: 20px\n}\n\n.forecast-info > div {\n    padding: 10px;\n    border: 1px solid black;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.current-container, .forecast-container {\n    text-align: center;\n    box-shadow: 0px 0px 3px #000000;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.current-container > h2, .forecast-container > h2 {\n    background-color: #2e2444;\n    color: white;\n    padding: 5px 20px;\n    border-radius: 5px;\n    margin-bottom: 20px;\n}\n\n.condition-image {\n    width: 500px;\n    height: 250px;\n    border-radius: 5px;\n    box-shadow: 0px 0px 3px #000000;\n}\n\ninput {\n    border: 1px solid #00000048;\n    height: 30px;\n    font-size: 1rem;\n    border-radius: 15px;\n    padding-left: 10px;\n    box-shadow: inset 2px 2px 3px #0000003b;\n}\n\nbutton {\n    border: none;\n    box-shadow: 2px 2px 3px #0000003b;\n    border-radius: 15px;\n    padding: 5px 15px;\n    font-size: 1rem;\n    background-color: #4b4b4b;\n    color: white;\n}\n\n.toggle {\n    background-color: #2e2444;\n    color: white;\n}\n\nbutton:active {\n    box-shadow: inset 2px 2px 3px #0000003b;\n}\n\n.toggle:active {\n    box-shadow: inset 2px 2px 3px #e3e3e398;\n}\n\n.credit {\n    text-shadow: 0px 0px 3px #ffffffc8;\n    background-color: #ffffff34;\n    box-shadow: 0px 0px 10px #ffffff34;\n    padding: 2px 10px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,4DAA4D;AAChE;;AAEA;IACI,UAAU;IACV,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,sBAAsB;IACtB,4BAA4B;IAC5B,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;IACT,aAAa;IACb,2BAA2B;IAC3B,mBAAmB;IACnB,kCAAkC;AACtC;;AAEA;IACI,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI;QACI,aAAa;QACb,sBAAsB;QACtB,SAAS;IACb;AACJ;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb;AACJ;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,+BAA+B;IAC/B,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,+BAA+B;AACnC;;AAEA;IACI,2BAA2B;IAC3B,YAAY;IACZ,eAAe;IACf,mBAAmB;IACnB,kBAAkB;IAClB,uCAAuC;AAC3C;;AAEA;IACI,YAAY;IACZ,iCAAiC;IACjC,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;IACf,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,kCAAkC;IAClC,2BAA2B;IAC3B,kCAAkC;IAClC,iBAAiB;AACrB",sourcesContent:["* {\n    box-sizing: border-box;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\nh1, h2, h3, h4, h5, h6, p {\n    padding: 0;\n    margin: 0;\n    text-align: center;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-size: cover;\n    background-repeat: no-repeat;\n    gap: 30px;\n    height: 100vh;\n}\n\n.app-body {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 30px;\n    padding: 20px;\n    background-color: #ffffffbc;\n    border-radius: 20px;\n    box-shadow: 0px 0px 10px #0000005e;\n}\n\n.location-info, .temp-info, .condition, .humidity {\n    border: 1px solid black;\n    border-radius: 10px;\n    padding: 20px;\n    width: 100%;\n    text-align: center;\n}\n\n.location-container {\n    width: 50%;\n}\n\n.location-info {\n    box-shadow: 2px 2px 3px #00000042;\n}\n\n.weather-info {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    align-items: center;\n}\n\n.weather-container {\n    display: flex;\n    gap: 10px;\n}\n\n@media only screen and (max-width: 768px) {\n    .weather-container {\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n    }\n}\n\n.temp-humid-container {\n    display: flex;\n    gap: 10px;\n}\n\n.temp-humid-container > * {\n    align-content: center;\n}\n\n.forecast-info {\n    display: flex;\n    gap: 20px\n}\n\n.forecast-info > div {\n    padding: 10px;\n    border: 1px solid black;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.current-container, .forecast-container {\n    text-align: center;\n    box-shadow: 0px 0px 3px #000000;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.current-container > h2, .forecast-container > h2 {\n    background-color: #2e2444;\n    color: white;\n    padding: 5px 20px;\n    border-radius: 5px;\n    margin-bottom: 20px;\n}\n\n.condition-image {\n    width: 500px;\n    height: 250px;\n    border-radius: 5px;\n    box-shadow: 0px 0px 3px #000000;\n}\n\ninput {\n    border: 1px solid #00000048;\n    height: 30px;\n    font-size: 1rem;\n    border-radius: 15px;\n    padding-left: 10px;\n    box-shadow: inset 2px 2px 3px #0000003b;\n}\n\nbutton {\n    border: none;\n    box-shadow: 2px 2px 3px #0000003b;\n    border-radius: 15px;\n    padding: 5px 15px;\n    font-size: 1rem;\n    background-color: #4b4b4b;\n    color: white;\n}\n\n.toggle {\n    background-color: #2e2444;\n    color: white;\n}\n\nbutton:active {\n    box-shadow: inset 2px 2px 3px #0000003b;\n}\n\n.toggle:active {\n    box-shadow: inset 2px 2px 3px #e3e3e398;\n}\n\n.credit {\n    text-shadow: 0px 0px 3px #ffffffc8;\n    background-color: #ffffff34;\n    box-shadow: 0px 0px 10px #ffffff34;\n    padding: 2px 10px;\n}"],sourceRoot:""}]);const c=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);a&&i[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var r={},i=[],c=0;c<n.length;c++){var d=n[c],s=a.base?d[0]+a.base:d[0],A=r[s]||0,p="".concat(s," ").concat(A);r[s]=A+1;var l=t(p),f={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==l)e[l].references++,e[l].updater(f);else{var u=o(f,a);a.byIndex=c,e.splice(c,0,{identifier:p,updater:u,references:1})}i.push(p)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=a(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var c=t(r[i]);e[c].references--}for(var d=a(n,o),s=0;s<r.length;s++){var A=t(r[s]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}r=d}}},659:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var r=e[a]={id:a,exports:{}};return n[a](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=a[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(72),e=t.n(n),a=t(825),o=t.n(a),r=t(659),i=t.n(r),c=t(56),d=t.n(c),s=t(540),A=t.n(s),p=t(113),l=t.n(p),f=t(208),u={};function m(n){return console.log(n),{country:n.location.country,city:n.location.name,region:n.location.region,tempC:n.current.temp_c,tempF:n.current.temp_f,feelslikeC:n.current.feelslike_c,feelslikeF:n.current.feelslike_f,humidity:n.current.humidity,condition:n.current.condition.text,conditionCode:n.current.condition.code,forecastDay1:n.forecast.forecastday[1],forecastDay2:n.forecast.forecastday[2],forecastDay3:n.forecast.forecastday[3]}}u.styleTagTransform=l(),u.setAttributes=d(),u.insert=i().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=A(),e()(f.A,u),f.A&&f.A.locals&&f.A.locals;const x=t.p+"caba6f87785ad2c1d356.jpg",h=t.p+"8864851ab68015a4c8cd.jpg",b=t.p+"9de33522e08b6b0f6d99.jpg",C=t.p+"413f19bcb08c4d2be3f1.jpg",y=t.p+"d7fdb0414f8c73ce5596.jpg",g=t.p+"e8d8828b0b18a69ce350.jpg",I=t.p+"69c1fdff7e159cee877e.jpg",B=t.p+"38da6ae1e91f7f292945.jpg";function v(n,e){const t=document.querySelector(".location-container"),a=document.querySelector(".weather-info"),o=document.querySelector(".forecast-info");for(;t.firstChild;)t.removeChild(t.firstChild);for(;a.firstChild;)a.removeChild(a.firstChild);for(;o.firstChild;)o.removeChild(o.firstChild);const r=document.createElement("h2"),i=document.createElement("p"),c=document.createElement("p"),d=document.createElement("h2");d.className="condition";const s=document.querySelector("body"),A=document.querySelector(".credit"),p=document.createElement("img");p.className="condition-image",async function(n,e,t,a,o){switch(e){case 1e3:t.src=x,a.style.background=`url(${x})`,o.innerHTML="Image by Hans from Pixabay";break;case 1003:t.src=h,a.style.background=`url(${h})`,o.innerHTML="Image by Enrique from Pixabay";break;case 1006:case 1087:t.src=b,a.style.background=`url(${b})`,o.innerHTML="Image by Enrique from Pixabay";break;case 1009:t.src=C,a.style.background=`url(${C})`,o.innerHTML="Image by Enrique from Pixabay";break;case 1030:case 1135:case 1147:t.src=y,a.style.background=`url(${y})`,o.innerHTML="Image by Joe from Pixabay";break;case 1063:case 1069:case 1072:case 1150:case 1153:case 1168:case 1171:case 1180:case 1183:case 1186:case 1189:case 1192:case 1195:case 1198:case 1201:case 1204:case 1207:case 1240:case 1243:case 1246:case 1249:case 1252:case 1273:case 1276:t.src=g,a.style.background=`url(${g})`,o.innerHTML="Image by 준원 서 from Pixabay";break;case 1066:case 1114:case 1117:case 1210:case 1213:case 1216:case 1219:case 1222:case 1225:case 1255:case 1258:case 1279:case 1282:t.src=I,a.style.background=`url(${I})`,o.innerHTML="Image by Anja from Pixabay";break;case 1237:case 1261:case 1264:t.src=B,a.style.background=`url(${B})`,o.innerHTML="Image by Hans from Pixabay"}}(n.condition,n.conditionCode,p,s,A);const l=document.createElement("h2"),f=document.createElement("p"),u=document.createElement("h2");u.className="humidity",r.innerHTML=n.city,i.innerHTML=n.country,c.innerHTML=n.region,d.innerHTML=n.condition,"c"===e?(l.innerHTML=`Temperature: ${n.tempC}°C`,f.innerHTML=`Feels like: ${n.feelslikeC}°C`):(l.innerHTML=`Temperature: ${n.tempF}F`,f.innerHTML=`Feels like: ${n.feelslikeF}F`),u.innerHTML=`Humdity: ${n.humidity}`;const m=document.createElement("div");m.className="location-info",m.appendChild(r),m.appendChild(i);const v=document.createElement("div");v.className="temp-humid-container";const w=document.createElement("div");w.className="temp-info",w.appendChild(l),w.appendChild(f),v.appendChild(w),v.appendChild(u),t.appendChild(m),a.appendChild(d),a.appendChild(v);const k=document.createElement("div"),E=document.createElement("h3"),T=document.createElement("div"),M=document.createElement("div"),S=document.createElement("div"),H=document.createElement("div"),L=document.createElement("div"),_=[E,T,M,S,H,L];E.innerHTML="Tomorrow",T.innerHTML=n.forecastDay1.day.condition.text,M.innerHTML="c"===e?`${n.forecastDay1.day.avgtemp_c}°C`:`${n.forecastDay1.day.avgtemp_f}F`,S.innerHTML=`Chance of Rain: ${n.forecastDay1.day.daily_chance_of_rain}%`,1===n.forecastDay1.day.daily_will_it_snow&&(H.innerHTML=`Chance of Snow: ${n.forecastDay1.day.daily_chance_of_snow}%`),L.innerHTML=`Humidity: ${n.forecastDay1.day.avghumidity}`,_.forEach((n=>{k.appendChild(n)})),o.appendChild(k);const $=document.createElement("div"),j=document.createElement("h3"),D=document.createElement("div"),q=document.createElement("div"),F=document.createElement("div"),P=document.createElement("div"),z=document.createElement("div"),N=[j,D,q,F,P,z];j.innerHTML="Day after tomorrow",D.innerHTML=n.forecastDay2.day.condition.text,q.innerHTML="c"===e?`${n.forecastDay2.day.avgtemp_c}°C`:`${n.forecastDay2.day.avgtemp_f}F`,F.innerHTML=`Chance of Rain: ${n.forecastDay2.day.daily_chance_of_rain}%`,1===n.forecastDay2.day.daily_will_it_snow&&(H.innerHTML=`Chance of Snow: ${n.forecastDay2.day.daily_chance_of_snow}%`),z.innerHTML=`Humidity: ${n.forecastDay2.day.avghumidity}`,N.forEach((n=>{$.appendChild(n)})),o.appendChild($)}async function w(n){try{const e=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=8172e47f317945cfa99140930240606&q=${n}&days=4`,{mode:"cors"});return await e.json()}catch(n){console.log(new Error(n))}}const k=document.querySelector(".search-field"),E=document.querySelector(".search-btn"),T=document.querySelector(".toggle");let M="c";E.addEventListener("click",(async()=>{const n=w(k.value).then((n=>m(n)));v(await n,M)})),T.addEventListener("click",(()=>{"c"===M?(M="f",T.setAttribute("class","toggle f"),T.innerHTML="F"):(M="c",T.setAttribute("class","toggle c"),T.innerHTML="°C")})),async function(){const n=w("London").then((n=>m(n)));v(await n,M)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,